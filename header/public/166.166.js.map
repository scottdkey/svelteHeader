{"version":3,"file":"166.166.js","mappings":"6jCAeqB,EAAW,GAAG,QAAU,S,8GAGV,EAAW,GAAG,QAAU,S,wMAL3D,SAIC,Q,iBACD,SAEK,O,8CAJO,EAAU,a,4DADD,EAAW,GAAG,QAAU,Q,4HAGV,EAAW,GAAG,QAAU,S,kVAfnDA,GAAW,S,gBAENC,GAAW,E,SAEbC,I,IACPD,GAAc,GACdD,EAAS,aAAc,CAAEC,YAAAA,I,m5CCyDF,EAAC,GAACE,YAAW,G,EACb,EAAC,GAACC,gBAAe,G,EAEX,EAAC,GAACC,WAAU,G,EACH,EAAC,GAACC,eAAc,G,EAOjD,EAAC,GAACC,mBAAkB,G,EAMT,EAAC,GAACJ,YAAW,G,uJAhBR,K,+HAGW,S,2BAAuB,K,gGAYrD,e,iXAPwB,aAAlB,EAAC,GAACA,YAA6B,WAAa,Y,yKAVpD,SAoBK,QAnBH,SAAwC,M,8BACxC,SAA4C,M,6CAC5C,SAGK,MAFH,SAA2C,M,8BAC3C,SAAyD,M,4DAG3D,SAKK,M,8BACL,SAKQ,M,yHAlBa,EAAC,GAACA,YAAW,oB,YACb,EAAC,GAACC,gBAAe,oB,YAEX,EAAC,GAACC,WAAU,oB,YACH,EAAC,GAACC,eAAc,oB,YAOjD,EAAC,GAACC,mBAAkB,oB,YAFC,aAAlB,EAAC,GAACJ,YAA6B,WAAa,a,+BAQpC,EAAC,GAACA,YAAW,qB,qPAnBxB,EAAO,GAAC,EAAO,GAAE,EAAiB,K,qCAAvC,OAAI,K,sPAVkC,W,gDAIC,U,8bAL5B,EAAO,GAAG,eAAiB,mB,8CAI1B,EAAO,GAAoB,iBAAjB,iB,0ZAf1B,SAKA,QAJG,SAGC,M,iBAEJ,SAcK,QAbH,SAYK,MAXH,SAAuC,M,eACvC,SASK,MARH,SAGA,M,8BACA,SAGA,M,gCAIN,SAwBK,O,4FA7CmC,EAAU,KAAV,EAAU,4B,4HAWnC,EAAO,GAAG,eAAiB,oB,kCAI1B,EAAO,GAAoB,iBAAjB,kB,wCAOjB,EAAO,GAAC,EAAO,GAAE,EAAiB,K,oBAAvC,OAAI,M,gHAAJ,S,sVA7DJ,M,UACA,M,WACA,M,eACA,KACA,K,MAEA,U,MAWA,4B,IASA,GACA,sBACA,iBACA,yBACA,uBACA,aACA,0G,OAGA,OAjBA,CACA,uBACA,iBACA,yBACA,uBACA,aACA,uEAWA,I,4xBAgByBK,GAAU,G,QAIVA,GAAU,G,GAsBXC,EAAUC,EAAEP,YAAaK,I,m1FCL7C,SAA8B,Q,sYAJ9B,SAEK,O,0BAFU,EAAU,a,kYAJzB,SAEK,O,0BAFU,EAAS,c,yNANX,EAAU,G,kBACF,EAAY,G,gMAAZ,EAAY,I,mUAHpB,IAAV,EAAK,GAAM,EAOI,IAAV,EAAK,GAAM,EAID,IAAV,EAAK,GAAM,E,wnBAxBjB,EAAO,GAAG,UAAY,S,8BAYR,EAAI,G,wEAAiB,EAAU,I,2EAf9C,EAAU,I,2CAET,EAAW,I,yFAEZ,W,YAAQ,EAAK,I,oEAMb,2B,sZAZL,SAeK,QAdH,SAEQ,M,8BACR,SAAmB,M,8BACnB,SAAsC,M,8BACtC,SAAoB,M,6CACpB,SAOO,MANL,SAIC,K,UAFe,EAAY,I,gFATC,EAAS,c,gHACrC,EAAU,M,qBAET,EAAW,M,gBACX,EAAO,GAAG,UAAY,YAAQ,gB,qBACvB,EAAK,I,iBAIE,EAAY,I,gCAOZ,EAAI,I,mZAnDxB,EAEA,EACA,EAJA,IAEA,KAGA,KAEA,K,SAQA,I,IACA,K,IACA,M,SAGA,I,IACA,M,SAGA,OACA,I,IACA,K,IACA,K,SAGA,I,IACA,OAtBA,c,IACA,M,IACA,a,IACA,+B,qsBAiCoBG,EAAY,a,gBACTA,GAAgBA,I","sources":["webpack://wp5-starter-svelte/./src/Components/CTAComponents/Modal.svelte","webpack://wp5-starter-svelte/./src/Components/CTAComponents/UpgradeOptions.svelte","webpack://wp5-starter-svelte/./src/Components/CTAwithModal.svelte"],"sourcesContent":["<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let isOpenModal;\n\n  function closeModal() {\n    isOpenModal = false;\n    dispatch(\"closeModal\", { isOpenModal });\n  }\n</script>\n\n<div\n  id=\"background\"\n  style=\"--display: {isOpenModal ? 'block' : 'none'};\"\n  on:click={closeModal}\n/>\n<div id=\"modal\" style=\"--display: {isOpenModal ? 'block' : 'none'};\">\n  <slot />\n</div>\n\n<style lang=\"scss\">\n  #background {\n    display: var(--display);\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgb(0, 0, 0);\n    opacity: 0.5;\n  }\n\n  #modal {\n    display: var(--display);\n    position: fixed;\n    z-index: 2;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: #ffffff;\n    opacity: 1;\n    border-radius: 6px;\n    padding: 8px 8px 0px 8px;\n  }\n</style>\n","<script lang=\"ts\">\n  import \"./UpgradeOptions.scss\";\n\n  export let standardPlanState: boolean;\n  export let nextPhase: (UpgradeType: string, Monthly: boolean) => void;\n  export let closeModal: () => void;\n  export let savingsPercent: number;\n  let monthly: boolean = false;\n\n  const choices = (\n    monthly,\n    hasStandardPlan\n  ): {\n    upgradeType: string;\n    savingsPercent: number;\n    discountedPrice: number;\n    originalPrice: number;\n    timePeriod: string;\n    libraryContentCopy: string;\n  }[] => {\n    const timePeriod = `per ${monthly ? \"month\" : \"year\"}`;\n    let standard = {\n      upgradeType: \"Standard\",\n      savingsPercent,\n      discountedPrice: monthly ? 10 : 199,\n      originalPrice: monthly ? 20 : 299,\n      timePeriod,\n      libraryContentCopy: \"Core course library, paths and skill assignments\",\n    };\n    let premium = {\n      upgradeType: \"Premium\",\n      savingsPercent,\n      discountedPrice: monthly ? 20 : 299,\n      originalPrice: monthly ? 35 : 449,\n      timePeriod,\n      libraryContentCopy:\n        \"Entire library of core and expanded courses, exams, projects and hands-on learning.\",\n    };\n    return hasStandardPlan ? [premium] : [standard, premium];\n  };\n</script>\n\n<button id=\"CloseModalButton\" on:click={closeModal}\n  ><img\n    src=\"https://img.icons8.com/material-outlined/20/000000/delete-sign.png\"\n    alt=\"close button\"\n  /></button\n>\n<div id=\"UpgradeOptionsHeader\">\n  <div id=\"innerHeader\">\n    <div id=\"callToAction\">Upgrade Now</div>\n    <div class=\"buttonContainer\">\n      <button\n        class={monthly ? \"activeButton\" : \"inactiveButton\"}\n        on:click={() => (monthly = true)}>Monthly</button\n      >\n      <button\n        class={!monthly ? \"activeButton\" : \"inactiveButton\"}\n        on:click={() => (monthly = false)}>Yearly</button\n      >\n    </div>\n  </div>\n</div>\n<div class=\"optionsRow\">\n  {#each choices(monthly, standardPlanState) as c}\n    <div class=\"optionsContainer\">\n      <div class=\"header\">{c.upgradeType}</div>\n      <div class=\"price\">${c.discountedPrice}</div>\n      <div class=\"priceAddendum\">\n        <div class=\"timePeriod\">{c.timePeriod}</div>\n        <div class=\"savingsPercent\">Save {c.savingsPercent}%</div>\n      </div>\n\n      <div\n        class=\"copy\"\n        id={c.upgradeType === \"Standard\" ? \"standard\" : \"premium\"}\n      >\n        {c.libraryContentCopy}\n      </div>\n      <button\n        on:click={() => nextPhase(c.upgradeType, monthly)}\n        class=\"upgradeButton\"\n      >\n        Upgrade to {c.upgradeType}\n      </button>\n    </div>\n  {/each}\n</div>\n","<script lang=\"ts\">\n  import Modal from \"./CTAComponents/Modal.svelte\";\n  import UpgradeOptions from \"./CTAComponents/UpgradeOptions.svelte\";\n  import \"./CTA.scss\";\n  import { onMount } from \"svelte\";\n\n  let phase: number = 0;\n  let upgradeType: string;\n  let monthly = false;\n  let buttonCopy: string;\n  let standardPlan: boolean;\n  let savingsPercent = 33;\n\n  let open: boolean = false;\n\n  onMount(() => {\n    standardPlan = false;\n    upgradeType = \"Premium\";\n    buttonCopy = `Upgrade and save ${savingsPercent}%`;\n  });\n\n  function openModal(): void {\n    phase = 0;\n    open = true;\n  }\n\n  function closeModal(): void {\n    open = false;\n  }\n\n  function setOptions(UpgradeType: string, Monthly: boolean): void {\n    nextPhase();\n    upgradeType = UpgradeType;\n    monthly = Monthly;\n  }\n\n  function nextPhase(): void {\n    phase += 1;\n  }\n</script>\n\n<div>\n  <button id=\"upgrade\" on:click={openModal}>\n    {buttonCopy}\n  </button>\n  <p>{upgradeType}</p>\n  <p>{monthly ? \"Monthly\" : \"Yearly\"}</p>\n  <p>Phase: {phase}</p>\n  <label>\n    <input\n      type=\"checkbox\"\n      bind:checked={standardPlan}\n      on:click={() => (standardPlan = !standardPlan)}\n    />\n    has Standard Plan\n  </label>\n</div>\n\n<Modal isOpenModal={open} on:closeModal={closeModal}>\n  {#if phase === 0}\n    <UpgradeOptions\n      nextPhase={setOptions}\n      standardPlanState={standardPlan}\n      {savingsPercent}\n      {closeModal}\n    />\n  {:else if phase === 1}\n    <div on:click={nextPhase} class=\"phasePlaceholder\">\n      Upgrade to Premium/ Upgrade to Standard\n    </div>\n  {:else if phase === 2}\n    <div on:click={closeModal} class=\"phasePlaceholder\">\n      Thank you! Welcome to the next level.(loading area)\n    </div>\n  {:else}\n    <div>you got an error bud</div>\n  {/if}\n</Modal>\n\n<style>\n  .phasePlaceholder {\n    color: black;\n  }\n</style>\n"],"names":["dispatch","isOpenModal","closeModal","upgradeType","discountedPrice","timePeriod","savingsPercent","libraryContentCopy","monthly","nextPhase","c","standardPlan"],"sourceRoot":""}